#include<iostream>
# define MAX 5
using namespace std;

class Deque
{
	int arr[MAX] = { 0 }, data, choice = 0;
	int front = -1, rear = -1;
public:
	bool isFull();
	bool isEmpty();
	void pushFront();
	void pushRear();
	void popFront();
	void popRear();
	void display();
	void mainMenu();
};

int main() {
	Deque d;
	d.mainMenu();
	return 0;
}

bool Deque::isFull()
{
	if (rear == MAX - 1 && front == 0)
		return true;
	else
		return false;
}

bool Deque::isEmpty()
{
	if (front == -1 && rear == -1)
		return true;
	else
		return false;
}

void Deque::pushRear()
{
	choice = 0;
	while (choice != 2)
	{
		if (isFull())
		{
			cout << "\n\t\t\t\tQueue Overflow\n\t\t\t\t";
			system("pause");
			break;
		}
		else
		{
			cout << "\n\t\t\tEnter Data :: ";
			cin >> data;
			if (front == -1 && rear == -1)
			{
				front = 0;
				rear = 0;
				arr[rear] = data;
			}
			else if (front > 0)
			{
				for (int i = front - 1; i <= rear; i++)
				{
					arr[i] = arr[i + 1];
				}
				arr[rear] = data;
				front--;
			}
			else
			{
				rear = rear++;
				arr[rear] = data;
			}
			while (choice != 2)
			{
				system("cls");
				cout << "\n\t\t\t\tEnqueue Successfully";
				if (rear == MAX - 1)
				{
					cout << "\n\t\t\t\tNumber of Max items reached\n\n";
					system("pause");
					choice = 2;
					break;
				}
				cout << "\n\n\t\t\t\t Press 1 . Enqueue Again ";
				cout << "\n\n\t\t\t\t Press 2 . Return Back ";
				cout << "\n\n\t\t\t\t  Enter Your Choice :: ";
				cin >> choice;
				if (choice == 1)
				{
					pushRear();
				}
			}
		}
	}
}

void Deque::pushFront()
{
	choice = 0;
	while (choice != 2)
	{
		if (isFull())
		{
			cout << "\n\t\t\t\tQueue Overflow\n\t\t\t\t";
			system("pause");
			break;
		}
		else
		{
			cout << "\n\t\t\tEnter Data :: ";
			cin >> data;
			if (front == -1 && rear == -1)
			{
				front = 0;
				rear = 0;
				arr[front] = data;
			}
			else if (front == 0 && rear < MAX - 1)
			{
				for (int i = rear; i >= front; i--)
				{
					arr[i + 1] = arr[i];
				}
				arr[front] = data;
				rear++;
			}
			else
			{
				front--;
				arr[front] = data;
			}
			while (choice != 2)
			{
				system("cls");
				cout << "\n\t\t\t\tEnqueue Successfully";
				if (rear == MAX - 1)
				{
					cout << "\n\t\t\t\tNumber of Max items reached\n\n";
					system("pause");
					choice = 2;
					break;
				}
				cout << "\n\n\t\t\t\t Press 1 . Enqueue Again ";
				cout << "\n\n\t\t\t\t Press 2 . Return Back ";
				cout << "\n\n\t\t\t\t  Enter Your Choice :: ";
				cin >> choice;
				if (choice == 1)
				{
					pushFront();
				}
			}
		}
	}
}

void Deque::popFront()
{
	choice = 0;
	while (choice != 2)
	{
		if (isEmpty())
		{
			cout << "\n\t\t\t\tQueue underflow\n\t\t\t\t";
			system("pause");
		}
		else
		{
			if (front == rear)
			{
				front = rear = -1;
			}
			else
			{
				front = front++;
			}
			while (choice != 2)
			{
				system("cls");
				cout << "\n\n\t\t\t\tDequeue Successfully";
				if (front == rear == -1)
				{
					choice = 2;
					break;
				}
				cout << "\n\n\t\t\t\t Press 1 . Dequeue Again From Front ";
				cout << "\n\n\t\t\t\t Press 2 . Return Back ";
				cout << "\n\n\t\t\t\t  Enter Your Choice :: ";
				cin >> choice;
				if (choice == 1)
				{
					popFront();
				}
			}
		}
	}
}

void Deque::popRear()
{
	choice = 0;
	while (choice != 2)
	{
		if (isEmpty())
		{
			cout << "\n\t\t\t\tQueue underflow\n\t\t\t\t";
			system("pause");
			break;
		}
		else
		{
			if (front == rear)
			{
				front = rear = -1;
			}
			else
			{
				rear = rear--;
			}
			while (choice != 2)
			{
				system("cls");
				cout << "\n\n\t\t\t\tDequeue Successfully";
				if (front == rear == -1)
				{
					choice = 2;
					break;
				}
				cout << "\n\n\t\t\t\t Press 1 . Dequeue Again From Rear ";
				cout << "\n\n\t\t\t\t Press 2 . Return Back ";
				cout << "\n\n\t\t\t\t  Enter Your Choice :: ";
				cin >> choice;
				if (choice == 1)
				{
					popRear();
				}
			}
		}
	}
}

void Deque::display()
{
	if (isEmpty())
	{
		cout << "\n\n\t\t\tQueue underflow\n\n";
	}
	else
	{
		cout << "\n\n Front ";
		for (int i = front; i <= rear; i++)
		{
			cout << " ---> " << arr[i];
		}
		cout << " <--- Rear\n\n";
	}
	system("pause");
}

void Deque::mainMenu()
{
	int check = 0;
	while (check != 4)
	{
		system("cls");
		cout << "\n\t\t\t\t\t\tMainmenu\n\t\t\t\t\t\t";
		cout << "\n\t\t\t\t1.Enqueue\n\t\t\t\t";
		cout << "\n\t\t\t\t2.Dequeue\n\t\t\t\t";
		cout << "\n\t\t\t\t3.Display\n\t\t\t\t";
		cout << "\n\t\t\t\t4.Exit\n\t\t\t\t";
		cout << "\n\t\t\t\t Enter Your Choice :: ";
		cin >> check;
		switch (check)
		{
		case 1:
			if (isFull())
			{
				cout << "\n\t\t\t\tQueue Overflow\n\t\t\t\t";
				system("pause");
			}
			else
			{
				while (choice != 4)
				{
					system("cls");
					cout << "\n\t\t\t\t\t\tEnQueue\n\t\t\t\t\t\t";
					cout << "\n\t\t\t\t1.From Rear End\n\t\t\t\t";
					cout << "\n\t\t\t\t2.From Front End\n\t\t\t\t";
					cout << "\n\t\t\t\t3.Display Queue\n\t\t\t\t";
					cout << "\n\t\t\t\t4.Back to Mainmenu\n\t\t\t\t";
					cout << "\n\t\t\t\t Enter Your Choice :: ";
					cin >> choice;
					switch (choice)
					{
					case 1:
						pushRear();
						break;
					case 2:
						pushFront();
						break;
					case 3:
						display();
						break;
					}
				}
			}
			break;
		case 2:
			if (isEmpty())
			{
				cout << "\n\t\t\t\tQueue underflow\n\t\t\t\t";
				system("pause");
			}
			else
			{
				system("cls");
				cout << "\n\t\t\t\t\t\tDeQueue\n\t\t\t\t\t\t";
				cout << "\n\t\t\t\t1.From Front End\n\t\t\t\t";
				cout << "\n\t\t\t\t2.From Rear End\n\t\t\t\t";
				cout << "\n\t\t\t\t3.Display Queue\n\t\t\t\t";
				cout << "\n\t\t\t\t4.Back to Mainmenu\n\t\t\t\t";
				cout << "\n\t\t\t\t Enter Your Choice :: ";
				cin >> choice;
				switch (choice)
				{
				case 1:
					popFront();
					break;
				case 2:
					popRear();
					break;
				case 3:
					display();
					break;
				}
			}
			break;
		case 3:
			display();
			break;
		}
	}
}
